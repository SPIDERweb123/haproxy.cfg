#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://www.haproxy.org/download/1.6/doc/configuration.txt
#   https://cbonte.github.io/haproxy-dconv/configuration-1.6.html
#   PORT 80__ MANAGER __container
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    # daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    tune.ssl.default-dh-param 2048

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main
    bind *:80
    bind *:443 ssl crt /ect/ssl/api.stbi.net.pem crt /ect/ssl/cloud.stbi.net.pem crt /ect/ssl/billing.stbi.net.pem crt /ect/ssl/www.stbi.net/www.stbi.net.pem crt /ect/ssl/gitlab.stbi.net/gitlab.stbi.net.pem crt /ect/ssl/customer.harveststorage.net/customer.harveststorage.net.pem crt /ect/ssl/www.harveststorage.net/www.harveststorage.net.pem crt /ect/ssl/employee.stbi.net/employee.stbi.net.pem crt /ect/ssl/manna.stbi.net/manna.stbi.net.pem crt /ect/ssl/openproject.stbi.net/openproject.stbi.net.pem crt /ect/ssl/map-app.stbi.net/map-app.stbi.net.pem crt /ect/ssl/maps.stbi.net/maps.stbi.net.pem crt /ect/ssl/maps2.stbi.net/maps2.stbi.net.pem crt /ect/ssl/maps3.stbi.net/maps3.stbi.net.pem crt /ect/ssl/maps4.stbi.net/maps4.stbi.net.pem 
#openproject.stbi.net.pem
# /var/lib/docker/overlay2/500eaa7bececf15ad79cf930017723733b039fe628ad1cf4c6c5d9a0772bd153/diff/etc/ssl/ #openproject.stbi.net/openproject.stbi.net.pem
	
        #redirect scheme https code 301 if !{ ssl_fc }
    # To be completed ....

	acl letsencrypt-acl path_beg /.well-known/acme-challenge/

	acl host_portainer hdr(host) -i docker.stbi.net

	#acl host_email hdr(host) -i 
 
   	acl host_websites hdr(host) -i customer.harveststorage.net
	acl host_websites1 hdr(host) -i www.stbi.net
	acl host_websites2 hdr(host) -i www.harveststorage.net
	acl host_websites3 hdr(host) -i employee.stbi.net


	acl host_manna hdr(host) -i manna.stbi.net
	acl host_manna1 hdr(host) -i api.stbi.net


	acl host_misc hdr(host) -i sensaphone-stbi.stbi.net
	acl host_misc1 hdr(host) -i security-stbi.stbi.net
	acl host_misc2 hdr(host) -i security-wak.stbi.net
	acl host_misc3 hdr(host) -i openproject.stbi.net


	acl host_lab-cloud hdr(host) -i cloud.stbi.net
	acl host_lab-cloud1 hdr(host) -i gitlab.stbi.net
	acl host_lab-cloud2 hdr(host) -i billing.stbi.net


	acl host_mapping hdr(host) -i map-app.stbi.net
	acl host_mapping1 hdr(host) -i osrm.stbi.net
	acl host_mapping2 hdr(host) -i maps.stbi.net
	acl host_mapping3 hdr(host) -i maps2.stbi.net
	acl host_mapping4 hdr(host) -i maps3.stbi.net
	acl host_mapping5 hdr(host) -i maps4.stbi.net
	
	


	

	use_backend letsencrypt       if letsencrypt-acl
	use_backend portainer         if host_portainer
	
	use_backend website_cluster    if host_websites
	use_backend website_cluster1   if host_websites1
	use_backend website_cluster2   if host_websites2
	use_backend website_cluster3   if host_websites3
	
	use_backend manna_cluster      if host_manna
	use_backend manna_cluster1     if host_manna1

	use_backend misc_cluster      if host_misc
	#use_backend misc_cluster1      if host_misc1
	#use_backend misc_cluster2     if host_misc2
	use_backend misc_cluster3    if host_misc3

	use_backend lab-cloud_cluster  if host_lab-cloud
	use_backend lab-cloud_cluster1 if host_lab-cloud1
	use_backend lab-cloud_cluster2 if host_lab-cloud2

	use_backend mapping_cluster    if host_mapping
	use_backend mapping_cluster1   if host_mapping1
	use_backend mapping_cluster2   if host_mapping2
	use_backend mapping_cluster3   if host_mapping3
	use_backend mapping_cluster4   if host_mapping4
	use_backend mapping_cluster5   if host_mapping5

	#use_backend email_cluster     if host_email
#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
backend letsencrypt
	server letsencrypt 127.0.0.1:8888
backend portainer
	server portainer1 192.168.80.147:9000

backend website_cluster
	server customer1 192.168.80.113:8085
backend website_cluster1
	server STBI1 192.168.80.113:8084
backend website_cluster2
	server Storage1 192.168.80.113:8081
backend website_cluster3
	server employee1 192.168.80.113:8083

backend mapping_cluster
	server app1 192.168.80.113:8086
backend mapping_cluster1
	server osrm1 192.168.80.146:5000
backend mapping_cluster2
	server maps 192.168.80.160:80
backend mapping_cluster3
	server maps21 192.168.80.160:80
backend mapping_cluster4
	server maps31 192.168.80.160:80
backend mapping_cluster5
	server maps41 192.168.80.160:80


backend manna_cluster
	server manna1 manna.stbi.net
backend manna_cluster1
	server api1 192.168.80.168:8080


backend misc_cluster
	server sensaphone1 192.168.80.175:80
#backend misc_cluster1
#	server stbi1 192.168.87.253
#backend misc_cluster2
#	server wak1 192.168.90.252
backend misc_cluster3
	server openproject1 192.168.80.147:8080

backend lab-cloud_cluster
	server cloud1 192.168.80.115:80
backend lab-cloud_cluster1
	server lab1 192.168.80.156:80
backend lab-cloud_cluster2
	server billing1 192.168.80.154:80

#backend email_cluster
#	server mail1 192.168.80.147:100

